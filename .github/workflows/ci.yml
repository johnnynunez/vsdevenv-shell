name: test vsdevenv-shell
on:
  push:
jobs:
  test-vsdevenv-shell:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
      - uses: ./

      - name: Run a preliminary bash step
        shell: bash
        run: |
          echo "Clean job environment (no dev tools)"
          echo "$(env | wc -l) environment variables defined"

      - name: Check for VsDevCmd
        shell: cmd
        run: |
          echo "Check PATH for VsDevCmd.bat..."
          where VsDevCmd.bat || echo "No VsDevCmd.bat in PATH"

          echo "List potential VS2022 folder..."
          dir "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools" /b

      - name: Run vsdevenv x64 bash
        shell: vsdevenv x64 bash {0}
        run: |
          echo "$(env | wc -l) environment variables defined"
          cl.exe
          echo "PreferredToolArchitecture=$PreferredToolArchitecture"

      - name: Run vsdevenv x86 cmd
        shell: vsdevenv x86 cmd {0}
        run: |
          echo "$(env | wc -l) environment variables defined"
          cl.exe
          echo "PreferredToolArchitecture=$PreferredToolArchitecture"

      - name: Run vsdevenv arm64 powershell
        shell: vsdevenv arm64 powershell {0}
        run: |
          echo "$(env | wc -l) environment variables defined"
          cl.exe
          echo "PreferredToolArchitecture=$PreferredToolArchitecture"

      - name: Run vsdevenv arm pwsh
        shell: vsdevenv arm pwsh {0}
        run: |
          echo "$(env | wc -l) environment variables defined"
          cl.exe
          echo "PreferredToolArchitecture=$PreferredToolArchitecture"

      - name: Run a later bash step
        shell: bash
        run: |
          echo "Clean job environment (no dev tools)"
          echo "$(env | wc -l) environment variables defined"

      - name: custom shell test
        shell: echo {0}
        run: echo test 1 2 3

      - name: cmake test -- vsdevenv x64 cmd
        shell: vsdevenv x64 cmd {0}
        run: |
          cmake -G "NMake Makefiles" -B tests\build-x64 -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=.
          cmake --build tests\build-x64 --config release
          dir tests\build-x64\helloworld.exe
          tests\build-x64\helloworld.exe 1 2 3 4

      - name: cmake test -- vsdevenv x64 bash -A x64
        shell: vsdevenv x64 bash {0}
        run: |
          cmake -A x64 -G "Visual Studio 17 2022" -B tests/build-Ax64 -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=.
          cmake --build tests/build-Ax64 --config release
          ls -l tests/build-Ax64/helloworld.exe
          ./tests/build-Ax64/helloworld.exe 1 2 3 4

      - name: cmake test -- vsdevenv x86 powershell
        shell: vsdevenv x86 powershell {0}
        run: |
          cmake -G "NMake Makefiles" -B tests\build-x86 -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=.
          cmake --build tests\build-x86 --config release
          dir tests\build-x86\helloworld.exe
          tests\build-x86\helloworld.exe 1 2 3 4

      - name: cmake test -- vsdevenv x86 cmd -A Win32
        shell: vsdevenv x86 cmd {0}
        run: |
          cmake -A Win32 -G "Visual Studio 17 2022" -B tests\build-Ax86 -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=.
          cmake --build tests\build-Ax86 --config release
          dir tests\build-Ax86\helloworld.exe
          tests\build-Ax86\helloworld.exe 1 2 3 4

      - name: Verify MSVC wrapper FAIL -- cmd (Expected Failure)
        shell: vsdevenv x86 cmd {0}
        continue-on-error: true  # This step is *expected* to fail
        run: |
          cmake -A invalid -G Invalid

      - name: Verify MSVC wrapper FAIL2 -- bash (Expected Failure)
        shell: vsdevenv x86 bash {0}
        continue-on-error: true  # This step is *expected* to fail
        run: |
          cmake -A invalid -G Invalid

      - name: Test with invalid arch (Expected Failure)
        shell: vsdevenv invalid bash {0}
        continue-on-error: true
        run: echo This should not run

      - name: Restore utils directory (Cleanup)
        shell: bash
        continue-on-error: true #Ensure that this step executes even if the above step fails
        if: always()  # Run this even if the previous step failed
        run: |
          if [ -d utils_temp ]; then
            mv utils_temp utils
          fi